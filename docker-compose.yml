services:
  postgres:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: castercurse_2025
      POSTGRES_DB: main
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  sveltekit:
    build:
      context: ./sveltekit-app
      dockerfile: Dockerfile
      args:
        - DATABASE_URL
        - PUBLIC_SUPABASE_ANON_KEY
        - PUBLIC_SUPABASE_URL
        - PUBLIC_TWITCH_CLIENT_ID
        - SECRET_TWITCH_SECRET
        - PUBLIC_TWITCH_AUTH_CALLBACK
    restart: always
    environment:
      DATABASE_URL: "postgresql://postgres:castercurse_2025@postgres:5432/main"
      PUBLIC_SUPABASE_ANON_KEY: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Inltb2Zkbnh1and6b2lzdHd5YmZmIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTA3MzU2MTUsImV4cCI6MjA2NjMxMTYxNX0.sVb36I12wJsDbiQ9lSKvB4YmYkcwqe0derPts4U1bFM"
      PUBLIC_SUPABASE_URL: "https://ymofdnxujwzoistwybff.supabase.co"
      PUBLIC_TWITCH_CLIENT_ID: "38bup0bxm8jsdqp3i7dvbwb5uu13w3"
      SECRET_TWITCH_SECRET: "ezgx8o4tpqvvr5i12afkxejjzvckgq"
      PUBLIC_TWITCH_AUTH_CALLBACK: "https://ymofdnxujwzoistwybff.supabase.co/auth/v1/callback"
    depends_on:
      - postgres
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      # Mount volumes for Certbot
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
    depends_on:
      - sveltekit
    networks:
      - app-network

  certbot:
    image: certbot/certbot
    volumes:
      # Mount volumes to share with Nginx
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    # Command to check for renewal every 12 hours
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  postgres_data:
    driver: local

networks:
  app-network:
    driver: bridge
